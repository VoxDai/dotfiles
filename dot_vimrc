" Disable Vi compatibility to enable Vim's enhanced features
set nocompatible

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vim-plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto install Vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins
call plug#begin('~/.vim/plugged')
Plug 'easymotion/vim-easymotion'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'tommcdo/vim-exchange'
Plug 'machakann/vim-highlightedyank'
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-entire'
Plug 'kana/vim-textobj-indent'
Plug 'vim-scripts/argtextobj.vim'
Plug 'vim-scripts/ReplaceWithRegister'
call plug#end()

" EasyMotion setting
let g:EasyMotion_do_mapping = 0 " Disable default mapping
let g:EasyMotion_smartcase = 1  " Enable smart case

" Argtextobj setting
let g:argtextobj_pairs = "[:],(:),<:>"

" vim-highlightedyank setting
let g:highlightedyank_highlight_duration = 300


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Sets how many lines of history VIM has to remember
set history=500

" Enable filetype plugins
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread
au FocusGained,BufEnter * silent! checktime

" Use system clipboard
set clipboard+=unnamed

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader=" "


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set line number
set relativenumber number

" Set 7 lines to the cursor - when moving vertically using j/k
set so=7

" Avoid garbled characters in Chinese language windows OS
let $LANG='en'
set langmenu=en
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" Turn on the Wild menu
set wildmenu

" Ignore compiled files
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" Always show current position
set ruler

" Height of the command bar
set cmdheight=1

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=2

" Always show the status line
set laststatus=2


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax highlighting
syntax enable

" Set regular expression engine automatically
set regexpengine=0

" Enable 256 colors palette in Gnome Terminal
if $COLORTERM == 'gnome-terminal'
    set t_Co=256
endif

try
    colorscheme torte
catch
endtry

set background=dark

" Set extra options when running in GUI mode
if has("gui_running")
    set guioptions-=T
    set guioptions-=e
    set t_Co=256
    set guitablabel=%M\ %t
endif

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Editing mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Switch `^` and `H`, `$` and `L`
noremap H ^
noremap ^ H
noremap L $
noremap $ L

" Redirect cut/delete/change commands to use the black hole register (_)
nnoremap d "_d
xnoremap d "_d
onoremap d "_d
nnoremap dd "_dd
xnoremap dd "_dd
onoremap dd "_dd
nnoremap D "_D
xnoremap D "_D
onoremap D "_D

nnoremap c "_c
xnoremap c "_c
onoremap c "_c
nnoremap cc "_cc
xnoremap cc "_cc
onoremap cc "_cc
nnoremap C "_C
xnoremap C "_C
onoremap C "_C

nnoremap x "_x
xnoremap x "_x
onoremap x "_x
nnoremap X "_X
xnoremap X "_X
onoremap X "_X

nnoremap s "_s
xnoremap s "_s
onoremap s "_s
nnoremap S "_S
xnoremap S "_S
onoremap S "_S

" Remap `m` as cut (original `d`)
nnoremap m d
xnoremap m d
onoremap m d

nnoremap mm dd
xnoremap mm dd
onoremap mm dd

nnoremap M D
xnoremap M D
onoremap M D

" Restore `m` (mark) functionality with `gm`
nnoremap gm m

" Use `U` to redo
nnoremap U <C-r>

" clear search highlights
nnoremap gh :noh<CR>

" EasyMotion
map <leader>f <Plug>(easymotion-f)
map <leader>F <Plug>(easymotion-F)
map <leader>t <Plug>(easymotion-t)
map <leader>T <Plug>(easymotion-T)
map <leader>s <Plug>(easymotion-s)

map <leader>w <Plug>(easymotion-w)
map <leader>W <Plug>(easymotion-W)
map <leader>b <Plug>(easymotion-b)
map <leader>B <Plug>(easymotion-B)
map <leader>e <Plug>(easymotion-e)
map <leader>E <Plug>(easymotion-E)

map <leader>j <Plug>(easymotion-j)
map <leader>k <Plug>(easymotion-k)

" ReplaceWithRegister
nmap gr <Plug>ReplaceWithRegisterOperator
nmap gR <Plug>ReplaceWithRegisterLine
xmap gr <Plug>ReplaceWithRegisterVisual


