" Disable Vi compatibility to enable Vim's enhanced features
set nocompatible

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vim-plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Auto install Vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins
call plug#begin('~/.vim/plugged')
Plug 'vim-scripts/argtextobj.vim'
Plug 'tpope/vim-commentary'
Plug 'easymotion/vim-easymotion'
Plug 'tommcdo/vim-exchange'
Plug 'machakann/vim-highlightedyank'
Plug 'michaeljsmith/vim-indent-object'
Plug 'chrisbra/matchit'
Plug 'dbakker/vim-paragraph-motion'
Plug 'unblevable/quick-scope'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'tpope/vim-surround'
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-entire'
call plug#end()

" EasyMotion setting
let g:EasyMotion_do_mapping = 0 " Disable default mapping
let g:EasyMotion_smartcase = 1  " Enable smart case

" Argtextobj setting
let g:argtextobj_pairs = "[:],(:),<:>"

" vim-highlightedyank setting
let g:highlightedyank_highlight_duration = 300

" quick-scope setting
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Sets how many lines of history VIM has to remember
set history=500

" Enable filetype plugins
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread
au FocusGained,BufEnter * silent! checktime

" Use system clipboard
set clipboard+=unnamed

" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader=" "


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set line number
set relativenumber number

" Set 7 lines to the cursor - when moving vertically using j/k
set so=7

" Avoid garbled characters in Chinese language windows OS
let $LANG='en'
set langmenu=en
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" Turn on the Wild menu
set wildmenu

" Ignore compiled files
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" Reduce delay when pressing Esc by setting a shorter keycode timeout
set timeout timeoutlen=1000 ttimeoutlen=10

" Always show current position
set ruler

" Height of the command bar
set cmdheight=1

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
set smartcase

" Highlight search results
set nohlsearch

" Makes search act like search in modern browsers
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=2

" Always show the status line
set laststatus=2


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax highlighting
syntax enable

" Set regular expression engine automatically
set regexpengine=0

" Enable 256 colors palette in Gnome Terminal
if $COLORTERM == 'gnome-terminal'
    set t_Co=256
endif

try
    colorscheme torte
catch
endtry

set background=dark

" Set extra options when running in GUI mode
if has("gui_running")
    set guioptions-=T
    set guioptions-=e
    set t_Co=256
    set guitablabel=%M\ %t
endif

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set expandtab

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set lbr
set tw=500

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Editing mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Yank from the cursor to the end of line
noremap Y y$

" Map `H` to move to the beginning of the line, `L` to the end
noremap H ^
noremap L $

" Insert a new line without enter insert mode
nnoremap go :call append(line("."), "")<CR>
nnoremap gO :call append(line(".") - 1, "")<CR>

" Use `U` to redo
nnoremap U <C-r>

" Use `Q` to toggle search highlights
nnoremap <silent> Q :set hlsearch!<CR>

" Redirect cut/delete/change commands to use the black hole register (_)
nnoremap d "_d
xnoremap d "_d
nnoremap D "_D
nnoremap dd "_dd

nnoremap c "_c
xnoremap c "_c
nnoremap C "_C
nnoremap cc "_cc

nnoremap x "_x
xnoremap x "_x
nnoremap X "_X
xnoremap X "_X

" Remap `m` as cut (original `d`)
nnoremap m d
xnoremap m d
nnoremap M D
nnoremap mm dd

" Restore `m` (mark) functionality with `gm`
nnoremap gm m

" Show all marks
nnoremap gM :marks<CR>

" Surround
nmap S ys

" EasyMotion
nmap s <Plug>(easymotion-sn)
xmap s <Plug>(easymotion-sn)
omap z <Plug>(easymotion-sn)

" ReplaceWithRegister
nmap gr <Plug>ReplaceWithRegisterOperator
nmap gR <Plug>ReplaceWithRegisterLine
xmap gr <Plug>ReplaceWithRegisterVisual


